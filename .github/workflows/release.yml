name: release

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          components: rustfmt, clippy
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y mingw-w64 gcc-mingw-w64-x86-64
      - name: Install Windows Target
        run: rustup target add x86_64-pc-windows-gnu
      - name: Build for Linux
        run: cargo build --release
      - name: Build for Windows
        run: cargo build --release --target x86_64-pc-windows-gnu
      - name: Create Unique Tag
        id: create_tag
        run: |
          while true; do
            TAG_NAME=$(date +'%Y%m%d%H%M%S')-$(openssl rand -hex 6)
            if ! git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
              echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
              echo "tag_name=${TAG_NAME}" >> $GITHUB_ENV
              git tag $TAG_NAME
              git push origin $TAG_NAME
              break
            fi
          done
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Linux Release Asset
        uses: ncipollo/release-action@v1
        with:
          artifacts: ./target/release/helloworld
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: true
      - name: Upload Windows Release Asset
        uses: ncipollo/release-action@v1
        with:
          artifacts: ./target/x86_64-pc-windows-gnu/release/helloworld.exe
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: true
